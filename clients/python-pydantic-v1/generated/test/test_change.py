# coding: utf-8

"""
    Azure IP Ranges and Service Tags - Public Cloud

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.9.0-pre.0
    Contact: blah+oapicf@cliffano.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.change import Change  # noqa: E501

class TestChange(unittest.TestCase):
    """Change unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Change:
        """Test Change
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Change`
        """
        model = Change()  # noqa: E501
        if include_optional:
            return Change(
                change_number = 56,
                cloud = '',
                values = [
                    openapi_client.models.value.Value(
                        name = '', 
                        id = '', 
                        properties = openapi_client.models.value_properties.ValueProperties(
                            change_number = 56, 
                            region = '', 
                            region_id = 56, 
                            platform = '', 
                            system_service = '', 
                            address_prefixes = [
                                ''
                                ], 
                            network_features = [
                                ''
                                ], ), )
                    ]
            )
        else:
            return Change(
        )
        """

    def testChange(self):
        """Test Change"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
