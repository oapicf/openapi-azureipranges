/**
* Azure IP Ranges and Service Tags - Public Cloud
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 0.10.1-pre.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param changeNumber The number associated with the change.
 * @param cloud The cloud environment.
 * @param propertyValues 
 */
object Changes : BaseTable<Change>("Change") {
    val changeNumber = int("changeNumber") /* null */ /* The number associated with the change. */
    val cloud = text("cloud") /* null */ /* The cloud environment. */

    /**
     * Create an entity of type Change from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = Change(
        changeNumber = row[changeNumber]  /* kotlin.Int? */ /* The number associated with the change. */,
        cloud = row[cloud]  /* kotlin.String? */ /* The cloud environment. */,
        propertyValues = emptyList() /* kotlin.Array<Value>? */
    )

    /**
    * Assign all the columns from the entity of type Change to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = Change()
    * database.update(Changes, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: Change) {
        this.apply {
            set(Changes.changeNumber, entity.changeNumber)
            set(Changes.cloud, entity.cloud)
        }
    }

}


object ChangeValue : BaseTable<Pair<kotlin.Long, kotlin.Long>>("ChangeValue") {
    val change = long("change")
    val value = long("value")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[change] ?: 0, row[value] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(ChangeValue.change, entity.first)
            set(ChangeValue.value, entity.second)
        }
    }

}

