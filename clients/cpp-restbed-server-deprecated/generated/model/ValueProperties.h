/**
 * Azure IP Ranges and Service Tags - Public Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.12.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ValueProperties.h
 *
 * 
 */

#ifndef ValueProperties_H_
#define ValueProperties_H_



#include <string>
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ValueProperties 
{
public:
    ValueProperties() = default;
    explicit ValueProperties(boost::property_tree::ptree const& pt);
    virtual ~ValueProperties() = default;

    std::string toJsonString(bool prettyJson = false);
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree();
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    /////////////////////////////////////////////
    /// ValueProperties members

    /// <summary>
    /// The number associated with the change.
    /// </summary>
    int32_t getChangeNumber() const;
    void setChangeNumber(int32_t value);

    /// <summary>
    /// The region associated with the value.
    /// </summary>
    std::string getRegion() const;
    void setRegion(std::string value);

    /// <summary>
    /// The ID of the region.
    /// </summary>
    int32_t getRegionId() const;
    void setRegionId(int32_t value);

    /// <summary>
    /// The platform associated with the value.
    /// </summary>
    std::string getPlatform() const;
    void setPlatform(std::string value);

    /// <summary>
    /// The system service associated with the value.
    /// </summary>
    std::string getSystemService() const;
    void setSystemService(std::string value);

    /// <summary>
    /// The address prefixes associated with the value.
    /// </summary>
    std::vector<std::string> getAddressPrefixes() const;
    void setAddressPrefixes(std::vector<std::string> value);

    /// <summary>
    /// The network features associated with the value.
    /// </summary>
    std::vector<std::string> getNetworkFeatures() const;
    void setNetworkFeatures(std::vector<std::string> value);

protected:
    //////////////////////////////////////
    // Override these for customization //
    //////////////////////////////////////

    virtual std::string toJsonString_internal(bool prettyJson = false);
    virtual void fromJsonString_internal(std::string const& jsonString);
    virtual boost::property_tree::ptree toPropertyTree_internal();
    virtual void fromPropertyTree_internal(boost::property_tree::ptree const& pt);


protected:
    int32_t m_ChangeNumber = 0;
    std::string m_Region = "";
    int32_t m_RegionId = 0;
    std::string m_Platform = "";
    std::string m_SystemService = "";
    std::vector<std::string> m_AddressPrefixes;
    std::vector<std::string> m_NetworkFeatures;
};

std::vector<ValueProperties> createValuePropertiesVectorFromJsonString(const std::string& json);

}
}
}
}

#endif /* ValueProperties_H_ */
