note
 description:"[
		Azure IP Ranges and Service Tags - Public Cloud
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: 0.9.0-pre.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CHANGE




feature --Access

    change_number: INTEGER_32
      -- The number associated with the change.
    cloud: detachable STRING_32
      -- The cloud environment.
    values: detachable LIST [VALUE]
      

feature -- Change Element

    set_change_number (a_name: like change_number)
        -- Set 'change_number' with 'a_name'.
      do
        change_number := a_name
      ensure
        change_number_set: change_number = a_name
      end

    set_cloud (a_name: like cloud)
        -- Set 'cloud' with 'a_name'.
      do
        cloud := a_name
      ensure
        cloud_set: cloud = a_name
      end

    set_values (a_name: like values)
        -- Set 'values' with 'a_name'.
      do
        values := a_name
      ensure
        values_set: values = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CHANGE%N")
        if attached change_number as l_change_number then
          Result.append ("%Nchange_number:")
          Result.append (l_change_number.out)
          Result.append ("%N")
        end
        if attached cloud as l_cloud then
          Result.append ("%Ncloud:")
          Result.append (l_cloud.out)
          Result.append ("%N")
        end
        if attached values as l_values then
          across l_values as ic loop
            Result.append ("%N values:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

