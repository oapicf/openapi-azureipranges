/**
* Azure IP Ranges and Service Tags - Public Cloud
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 0.9.0-pre.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Value.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

Value::Value()
{
    m_Name = "";
    m_NameIsSet = false;
    m_Id = "";
    m_IdIsSet = false;
    m_PropertiesIsSet = false;
    
}

void Value::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool Value::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool Value::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "Value" : pathPrefix;

                
    return success;
}

bool Value::operator==(const Value& rhs) const
{
    return
    
    
    
    ((!nameIsSet() && !rhs.nameIsSet()) || (nameIsSet() && rhs.nameIsSet() && getName() == rhs.getName())) &&
    
    
    ((!idIsSet() && !rhs.idIsSet()) || (idIsSet() && rhs.idIsSet() && getId() == rhs.getId())) &&
    
    
    ((!propertiesIsSet() && !rhs.propertiesIsSet()) || (propertiesIsSet() && rhs.propertiesIsSet() && getProperties() == rhs.getProperties()))
    
    ;
}

bool Value::operator!=(const Value& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const Value& o)
{
    j = nlohmann::json::object();
    if(o.nameIsSet())
        j["name"] = o.m_Name;
    if(o.idIsSet())
        j["id"] = o.m_Id;
    if(o.propertiesIsSet())
        j["properties"] = o.m_Properties;
    
}

void from_json(const nlohmann::json& j, Value& o)
{
    if(j.find("name") != j.end())
    {
        j.at("name").get_to(o.m_Name);
        o.m_NameIsSet = true;
    } 
    if(j.find("id") != j.end())
    {
        j.at("id").get_to(o.m_Id);
        o.m_IdIsSet = true;
    } 
    if(j.find("properties") != j.end())
    {
        j.at("properties").get_to(o.m_Properties);
        o.m_PropertiesIsSet = true;
    } 
    
}

std::string Value::getName() const
{
    return m_Name;
}
void Value::setName(std::string const& value)
{
    m_Name = value;
    m_NameIsSet = true;
}
bool Value::nameIsSet() const
{
    return m_NameIsSet;
}
void Value::unsetName()
{
    m_NameIsSet = false;
}
std::string Value::getId() const
{
    return m_Id;
}
void Value::setId(std::string const& value)
{
    m_Id = value;
    m_IdIsSet = true;
}
bool Value::idIsSet() const
{
    return m_IdIsSet;
}
void Value::unsetId()
{
    m_IdIsSet = false;
}
org::openapitools::server::model::ValueProperties Value::getProperties() const
{
    return m_Properties;
}
void Value::setProperties(org::openapitools::server::model::ValueProperties const& value)
{
    m_Properties = value;
    m_PropertiesIsSet = true;
}
bool Value::propertiesIsSet() const
{
    return m_PropertiesIsSet;
}
void Value::unsetProperties()
{
    m_PropertiesIsSet = false;
}


} // namespace org::openapitools::server::model

