--  Azure IP Ranges and Service Tags _ Public Cloud
--  No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
--
--  The version of the OpenAPI document: 0.9.0_pre.0
--  Contact: blah+oapicf@cliffano.com
--
--  NOTE: This package is auto generated by OpenAPI-Generator 7.5.0.
--  https://openapi-generator.tech
--  Do not edit the class manually.

package body .Models is
   pragma Style_Checks ("-bmrIu");

   pragma Warnings (Off, "*use clause for package*");

   use Swagger.Streams;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ValueProperties_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Change_Number.Is_Null then
         Into.Write_Entity ("changeNumber", Value.Change_Number);
      end if;
      if not Value.Region.Is_Null then
         Into.Write_Entity ("region", Value.Region);
      end if;
      if not Value.Region_Id.Is_Null then
         Into.Write_Entity ("regionId", Value.Region_Id);
      end if;
      if not Value.Platform.Is_Null then
         Into.Write_Entity ("platform", Value.Platform);
      end if;
      if not Value.System_Service.Is_Null then
         Into.Write_Entity ("systemService", Value.System_Service);
      end if;
      Serialize (Into, "addressPrefixes", Value.Address_Prefixes);
      Serialize (Into, "networkFeatures", Value.Network_Features);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ValueProperties_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ValueProperties_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "changeNumber", Value.Change_Number);
      Swagger.Streams.Deserialize (Object, "region", Value.Region);
      Swagger.Streams.Deserialize (Object, "regionId", Value.Region_Id);
      Swagger.Streams.Deserialize (Object, "platform", Value.Platform);
      Swagger.Streams.Deserialize (Object, "systemService", Value.System_Service);
      Swagger.Streams.Deserialize (Object, "addressPrefixes", Value.Address_Prefixes);
      Swagger.Streams.Deserialize (Object, "networkFeatures", Value.Network_Features);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ValueProperties_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ValueProperties_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Value_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Id.Is_Null then
         Into.Write_Entity ("id", Value.Id);
      end if;
      Serialize (Into, "properties", Value.Properties);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Value_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Value_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Deserialize (Object, "properties", Value.Properties);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Value_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.Value_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Change_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Change_Number.Is_Null then
         Into.Write_Entity ("changeNumber", Value.Change_Number);
      end if;
      if not Value.Cloud.Is_Null then
         Into.Write_Entity ("cloud", Value.Cloud);
      end if;
      Serialize (Into, "values", Value.Values);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Change_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Change_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "changeNumber", Value.Change_Number);
      Swagger.Streams.Deserialize (Object, "cloud", Value.Cloud);
      Deserialize (Object, "values", Value.Values);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Change_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.Change_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;


end .Models;
