//
// Value.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Value: Codable, JSONEncodable, Hashable {

    /** The name of the value. */
    public var name: String?
    /** The unique identifier of the value. */
    public var id: String?
    public var properties: ValueProperties?

    public init(name: String? = nil, id: String? = nil, properties: ValueProperties? = nil) {
        self.name = name
        self.id = id
        self.properties = properties
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case id
        case properties
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(properties, forKey: .properties)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension Value: Identifiable {}
