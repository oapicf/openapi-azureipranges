# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.value import Value
from openapi_server import util


class Change(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, change_number: int=None, cloud: str=None, values: List[Value]=None):
        """Change - a model defined in OpenAPI

        :param change_number: The change_number of this Change.
        :param cloud: The cloud of this Change.
        :param values: The values of this Change.
        """
        self.openapi_types = {
            'change_number': int,
            'cloud': str,
            'values': List[Value]
        }

        self.attribute_map = {
            'change_number': 'changeNumber',
            'cloud': 'cloud',
            'values': 'values'
        }

        self._change_number = change_number
        self._cloud = cloud
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Change':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Change of this Change.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def change_number(self):
        """Gets the change_number of this Change.

        The number associated with the change.

        :return: The change_number of this Change.
        :rtype: int
        """
        return self._change_number

    @change_number.setter
    def change_number(self, change_number):
        """Sets the change_number of this Change.

        The number associated with the change.

        :param change_number: The change_number of this Change.
        :type change_number: int
        """

        self._change_number = change_number

    @property
    def cloud(self):
        """Gets the cloud of this Change.

        The cloud environment.

        :return: The cloud of this Change.
        :rtype: str
        """
        return self._cloud

    @cloud.setter
    def cloud(self, cloud):
        """Sets the cloud of this Change.

        The cloud environment.

        :param cloud: The cloud of this Change.
        :type cloud: str
        """

        self._cloud = cloud

    @property
    def values(self):
        """Gets the values of this Change.


        :return: The values of this Change.
        :rtype: List[Value]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this Change.


        :param values: The values of this Change.
        :type values: List[Value]
        """

        self._values = values
