#
# Azure IP Ranges and Service Tags - Public Cloud
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 0.10.1-pre.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER ChangeNumber
The number associated with the change.
.PARAMETER Cloud
The cloud environment.
.PARAMETER Values
No description available.
.OUTPUTS

Change<PSCustomObject>
#>

function Initialize-Change {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${ChangeNumber},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Cloud},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Values}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => Change' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "changeNumber" = ${ChangeNumber}
            "cloud" = ${Cloud}
            "values" = ${Values}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to Change<PSCustomObject>

.DESCRIPTION

Convert from JSON to Change<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

Change<PSCustomObject>
#>
function ConvertFrom-JsonToChange {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => Change' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in Change
        $AllProperties = ("changeNumber", "cloud", "values")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "changeNumber"))) { #optional property not found
            $ChangeNumber = $null
        } else {
            $ChangeNumber = $JsonParameters.PSobject.Properties["changeNumber"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cloud"))) { #optional property not found
            $Cloud = $null
        } else {
            $Cloud = $JsonParameters.PSobject.Properties["cloud"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "values"))) { #optional property not found
            $Values = $null
        } else {
            $Values = $JsonParameters.PSobject.Properties["values"].value
        }

        $PSO = [PSCustomObject]@{
            "changeNumber" = ${ChangeNumber}
            "cloud" = ${Cloud}
            "values" = ${Values}
        }

        return $PSO
    }

}

